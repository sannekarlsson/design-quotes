{"version":3,"sources":["scripts/loader.js","scripts/quoteHandler.js","scripts/wikiHandler.js","scripts/main.js"],"names":["loader","document","querySelector","createDot","dotElement","createElement","className","createDots","quantity","i","appendChild","toggleBubbling","show","value","allDots","querySelectorAll","forEach","dot","style","WebkitAnimationPlayState","animationPlayState","aQuote","element","author","endpointUrl","filter","initQuote","jsonObj","cite","link","custom_meta","Source","replace","trim","setAttribute","taggedQuote","content","innerHTML","title","getQuoteRequest","time","timestamp","Math","round","Date","getTime","request","wiki","baseUrl","summary","info","getWikiSummaryUrl","displayWiki","extract","textContent","description","display","clearWiki","noWikiFound","quote","button","collection","container","default","find","hide","loading","getQuote","resetWiki","toggleLoaderAndQuote","nextQuote","shift","displayQuote","fetchJson","displayAndStoreQuotes","length","push","callback","fetch","then","response","ok","json","Error","status","myJson","catch","error","console","noEntryFound","loaderOpacity","opacity","toggleAuthor","event","getWiki","target","dataset","url","startsWith","displayError","errorElement","el","insertBefore","setTimeout","removeChild","addEventListener"],"mappings":"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","file":"main.fc153fef.map","sourceRoot":"../src","sourcesContent":["const loader = document.querySelector('.loader');\n\n// Create a div with class dot for the loading animation\nfunction createDot() {\n    let dotElement = document.createElement('div');\n    dotElement.className = 'dot';\n    return dotElement;\n}\n\n// Create given quantity of dots and add them to the DOM\nexport function createDots(quantity) {\n    for (let i = 0; i < quantity; i++) {\n        loader.appendChild(createDot());\n    }\n}\n\n// Toggle animation for the loading dots on show & hide\nexport function toggleBubbling(show) {\n    let value = show ? 'running' : 'paused';\n    let allDots = document.querySelectorAll('.dot');\n    [...allDots].forEach(dot => {\n        dot.style.WebkitAnimationPlayState = value;\n        dot.style.animationPlayState = value;\n    });\n}\n","const aQuote = {\n    element: document.querySelector('q'),\n    author: document.querySelector('p.author'),\n    endpointUrl: 'https://quotesondesign.com/wp-json/posts',\n    filter: '?filter[orderby]=rand&filter[posts_per_page]=5',\n};\n\n// Insert the quote and its properties \nexport function initQuote(jsonObj) {\n    let cite = jsonObj.link;\n    // If custom_meta is present, set Source as cite instead\n    if (jsonObj.custom_meta) {\n        cite = jsonObj.custom_meta.Source;\n        // Remove the a tags from the content.\n        cite.replace(/<\\/?a>/g, '').trim();\n    }\n    aQuote.element.setAttribute('cite', cite);\n\n    // Remove the p tags from the quote content.\n    // Use innerHTML to display utf-8 characters correctly\n    let taggedQuote = jsonObj.content;\n    aQuote.element.innerHTML = taggedQuote.replace(/<\\/?p>/g, '').trim();\n\n    // Set up author's name\n    aQuote.author.innerHTML = jsonObj.title;\n}\n\n// Return a request url\nexport function getQuoteRequest() {\n    // Add a timestamp to get around the browser cache\n    let time = Math.round(new Date().getTime() / 1000);\n    let timestamp = '&timestamp=' + time;\n    // Put them together to form a request url\n    let request = aQuote.endpointUrl + aQuote.filter + timestamp;\n    return request;\n}","// Handle author's wikiInfo\n\nexport const wiki = {\n    baseUrl: 'https://en.wikipedia.org/api/rest_v1',\n    summary: '/page/summary/',\n    info: document.querySelector('p.wiki'),\n};\n\n// Concatenate url and author into a request string\nexport function getWikiSummaryUrl(author) {\n    return wiki.baseUrl + wiki.summary + author;\n}\n\n// Display summary for author's wiki\nexport function displayWiki(jsonObj) {\n    // Show the longer summary if it exists\n    if (jsonObj.extract) {\n        wiki.info.textContent = jsonObj.extract;\n    } else {\n        wiki.info.textContent = jsonObj.description;\n    }\n    // Add author data attribute for reuse,\n    // instead of making a new API request\n    wiki.info.setAttribute('data-author', jsonObj.title);\n    wiki.info.style.display = 'block';\n}\n\n// Clear wiki info\nexport function clearWiki() {\n    wiki.info.style.display = 'none';\n    wiki.info.setAttribute('data-author', '');\n    wiki.info.textContent = '';\n}\n\n// Display an error message\nexport function noWikiFound(author) {\n    wiki.info.innerHTML = `Sorry, there was no Wikipedia entry available. Maybe try a <a href=\"https://www.google.se/search?q=${author}\">Google search?</a>`;\n    wiki.info.setAttribute('data-author', author);\n    wiki.info.style.display = 'block';\n}","import '../styles/main.scss';\nimport { createDots, toggleBubbling } from './loader.js';\nimport { getQuoteRequest, initQuote } from './quoteHandler.js';\nimport { clearWiki, displayWiki, getWikiSummaryUrl, noWikiFound, wiki }\n    from './wikiHandler.js';\n\n'use strict';\n\nconst quote = {\n    button: document.querySelector('button[name=\"quote\"]'),\n    collection: [],\n    container: document.querySelector('.quote-container'),\n    default: {\n        content: 'Perfection is boring. Getting better is where all the fun is.',\n        link: 'https://quotesondesign.com/dragos-roua/',\n        title: 'Dragos Roua'\n    },\n};\n\nconst author = {\n    button: document.querySelector('button[name=\"author\"]'),\n    find: 'Who is quoted?',\n    hide: 'Hide author info',\n}\n\n\n// Loading animation\nconst loading = document.querySelector('.loader');\ncreateDots(5);\n\n// Add event listeners to buttons\nauthor.button.addEventListener('click', toggleAuthor);\nquote.button.addEventListener('click', getQuote);\n\n// Initiate quote\ngetQuote();\n\n// Get a quote to display\nfunction getQuote() {\n    // Reset wiki in case it is shown\n    resetWiki();\n    // Show loader and hide quote\n    toggleLoaderAndQuote(1);\n    // Get next quote to display\n    let nextQuote = quote.collection.shift();\n    if (nextQuote) {\n        displayQuote(nextQuote);\n    } else {\n        fetchJson(getQuoteRequest(), displayAndStoreQuotes);\n    }\n}\n\n// Display a quote\nfunction displayQuote(jsonObj) {\n    initQuote(jsonObj);\n    // Set the author as value of button\n    // to fetch author wiki on future button click\n    author.button.value = jsonObj.title;\n\n    // Hide loader and show quote\n    toggleLoaderAndQuote(0);\n}\n\n// Store quotes for later access\nfunction displayAndStoreQuotes(jsonObj) {\n    // Display one of the fetched quotes\n    displayQuote(jsonObj[0]);\n    // Store the others for later access\n    for (let i = 1; i < jsonObj.length; i++) {\n        quote.collection.push(jsonObj[i]);\n    }\n}\n\n// Calls to API's, expecting JSON\nfunction fetchJson(request, callback) {\n\n    fetch(request)\n        .then((response) => {\n            if (response.ok) {\n                return response.json();\n            } else {\n                throw new Error(`Fetch response with status: ${response.status}.`);\n            }\n        })\n        .then((myJson) => {\n            callback(myJson);\n        })\n        .catch((error) => {\n            console.error(`Sorry! Something went wrong with the request. ${error}`);\n            noEntryFound(request);\n        });\n\n}\n\n// Toggle show & hide for loader animation and quote\nfunction toggleLoaderAndQuote(loaderOpacity) {\n    quote.container.style.opacity = loaderOpacity ? 0 : 1;\n    loading.style.opacity = loaderOpacity;\n    toggleBubbling(loaderOpacity);\n}\n\n// Toggle author button text as well as\n// display and hide wiki summary.\nfunction toggleAuthor(event) {\n    let buttonText = author.button.textContent;\n    if (buttonText === author.hide) {\n        wiki.info.style.display = 'none';\n        author.button.textContent = author.find;\n    } else {\n        author.button.textContent = author.hide;\n        getWiki(event.target.value);\n    }\n}\n\n// Display summary if wiki has already been fetched for \n// current author, otherwise make an API request.\nfunction getWiki(author) {\n    if (wiki.info.dataset.author === author) {\n        wiki.info.style.display = 'block';\n    } else {\n        let request = getWikiSummaryUrl(author);\n        fetchJson(request, displayWiki);\n    }\n}\n\n// Clear the wiki element from previous author, \n// since a new quote will be displayed\n// and toggle author button text.\nfunction resetWiki() {\n    author.button.textContent = author.find;\n    clearWiki();\n}\n\n// Handle errors in API calls\nfunction noEntryFound(url) {\n    // Error in the Wikipedia response\n    if (url.startsWith(wiki.baseUrl)) {\n        noWikiFound(author.button.value);\n    } else {\n        // Error in the quote response\n        displayQuote(quote.default);\n        displayError(errorElement());\n    }\n}\n\n// Create an element with a quote error message\nfunction errorElement() {\n    const el = document.createElement('p');\n    el.className = 'no-entry';\n    el.textContent = 'Sorry, could not fetch quotes. Will hopefully work soon again. This is a default quote in the mean time.';\n    return el;\n}\n\n// Display quote error for 6 seconds\nfunction displayError(errorElement) {\n    // Only display 1 error message at a time\n    if (document.querySelector('.no-entry')) {\n        return;\n    }\n    quote.container.insertBefore(errorElement, document.querySelector('.button-group'));\n\n    setTimeout(() => {\n        quote.container.removeChild(errorElement);\n    }, 6000);\n}\n"]}